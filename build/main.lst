ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB69:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "MS5837.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c ****  I2C_HandleTypeDef hi2c1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** UART_HandleTypeDef huart2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** MS5837_t * MS5837;
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_I2C1_Init(void);
  55:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 3


  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_I2C1_Init();
  94:Core/Src/main.c ****   MX_USART2_UART_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c ****   MS5837_Init(MS5837);
  97:Core/Src/main.c ****   /* USER CODE END 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Infinite loop */
 100:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 101:Core/Src/main.c ****   while (1)
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief System Clock Configuration
 112:Core/Src/main.c ****   * @retval None
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** void SystemClock_Config(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 120:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 128:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****     Error_Handler();
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     Error_Handler();
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c **** }
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 4


 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 150:Core/Src/main.c ****   * @param None
 151:Core/Src/main.c ****   * @retval None
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c **** static void MX_I2C1_Init(void)
 154:Core/Src/main.c **** {
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 163:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 164:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 165:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 166:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 167:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 168:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 169:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 170:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 171:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 172:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /**
 183:Core/Src/main.c ****   * @brief USART2 Initialization Function
 184:Core/Src/main.c ****   * @param None
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 188:Core/Src/main.c **** {
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 197:Core/Src/main.c ****   huart2.Instance = USART2;
 198:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 199:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 200:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 201:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 202:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 203:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 204:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 5


 205:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** }
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /**
 216:Core/Src/main.c ****   * @brief GPIO Initialization Function
 217:Core/Src/main.c ****   * @param None
 218:Core/Src/main.c ****   * @retval None
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c **** static void MX_GPIO_Init(void)
 221:Core/Src/main.c **** {
  26              		.loc 1 221 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 224:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  34              		.loc 1 224 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 224 3 view .LVU2
  37              		.loc 1 224 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F00402 		orr	r2, r2, #4
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 224 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F00402 		and	r2, r2, #4
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 224 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
  49              		.loc 1 224 3 view .LVU6
 225:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  50              		.loc 1 225 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 225 3 view .LVU8
  53              		.loc 1 225 3 view .LVU9
  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00802 		orr	r2, r2, #8
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 225 3 view .LVU10
  58 001e 9B69     		ldr	r3, [r3, #24]
  59 0020 03F00803 		and	r3, r3, #8
  60 0024 0193     		str	r3, [sp, #4]
  61              		.loc 1 225 3 view .LVU11
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 6


  62 0026 019B     		ldr	r3, [sp, #4]
  63              	.LBE5:
  64              		.loc 1 225 3 view .LVU12
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** }
  65              		.loc 1 227 1 is_stmt 0 view .LVU13
  66 0028 02B0     		add	sp, sp, #8
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		@ sp needed
  70 002a 7047     		bx	lr
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 002c 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE69:
  78              		.section	.text.Error_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	Error_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	Error_Handler:
  86              	.LFB70:
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /* USER CODE END 4 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /**
 234:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 235:Core/Src/main.c ****   * @retval None
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c **** void Error_Handler(void)
 238:Core/Src/main.c **** {
  87              		.loc 1 238 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ Volatile: function does not return.
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
 239:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 240:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 241:Core/Src/main.c ****   __disable_irq();
  93              		.loc 1 241 3 view .LVU15
  94              	.LBB6:
  95              	.LBI6:
  96              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 7


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 8


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 9


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  97              		.loc 2 140 27 view .LVU16
  98              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  99              		.loc 2 142 3 view .LVU17
 100              		.syntax unified
 101              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 102 0000 72B6     		cpsid i
 103              	@ 0 "" 2
 104              		.thumb
 105              		.syntax unified
 106              	.L6:
 107              	.LBE7:
 108              	.LBE6:
 242:Core/Src/main.c ****   while (1)
 109              		.loc 1 242 3 discriminator 1 view .LVU18
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****   }
 110              		.loc 1 244 3 discriminator 1 view .LVU19
 242:Core/Src/main.c ****   while (1)
 111              		.loc 1 242 9 discriminator 1 view .LVU20
 112 0002 FEE7     		b	.L6
 113              		.cfi_endproc
 114              	.LFE70:
 116              		.section	.text.MX_I2C1_Init,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	MX_I2C1_Init:
 123              	.LFB67:
 154:Core/Src/main.c **** 
 124              		.loc 1 154 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 08B5     		push	{r3, lr}
 129              	.LCFI2:
 130              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 10


 131              		.cfi_offset 3, -8
 132              		.cfi_offset 14, -4
 163:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 133              		.loc 1 163 3 view .LVU22
 163:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 134              		.loc 1 163 18 is_stmt 0 view .LVU23
 135 0002 0A48     		ldr	r0, .L11
 136 0004 0A4B     		ldr	r3, .L11+4
 137 0006 0360     		str	r3, [r0]
 164:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 138              		.loc 1 164 3 is_stmt 1 view .LVU24
 164:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 139              		.loc 1 164 25 is_stmt 0 view .LVU25
 140 0008 0A4B     		ldr	r3, .L11+8
 141 000a 4360     		str	r3, [r0, #4]
 165:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 142              		.loc 1 165 3 is_stmt 1 view .LVU26
 165:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 143              		.loc 1 165 24 is_stmt 0 view .LVU27
 144 000c 0023     		movs	r3, #0
 145 000e 8360     		str	r3, [r0, #8]
 166:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 146              		.loc 1 166 3 is_stmt 1 view .LVU28
 166:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 147              		.loc 1 166 26 is_stmt 0 view .LVU29
 148 0010 C360     		str	r3, [r0, #12]
 167:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 149              		.loc 1 167 3 is_stmt 1 view .LVU30
 167:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 150              		.loc 1 167 29 is_stmt 0 view .LVU31
 151 0012 4FF48042 		mov	r2, #16384
 152 0016 0261     		str	r2, [r0, #16]
 168:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 153              		.loc 1 168 3 is_stmt 1 view .LVU32
 168:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 154              		.loc 1 168 30 is_stmt 0 view .LVU33
 155 0018 4361     		str	r3, [r0, #20]
 169:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 156              		.loc 1 169 3 is_stmt 1 view .LVU34
 169:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 157              		.loc 1 169 26 is_stmt 0 view .LVU35
 158 001a 8361     		str	r3, [r0, #24]
 170:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 159              		.loc 1 170 3 is_stmt 1 view .LVU36
 170:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 160              		.loc 1 170 30 is_stmt 0 view .LVU37
 161 001c C361     		str	r3, [r0, #28]
 171:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 162              		.loc 1 171 3 is_stmt 1 view .LVU38
 171:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 163              		.loc 1 171 28 is_stmt 0 view .LVU39
 164 001e 0362     		str	r3, [r0, #32]
 172:Core/Src/main.c ****   {
 165              		.loc 1 172 3 is_stmt 1 view .LVU40
 172:Core/Src/main.c ****   {
 166              		.loc 1 172 7 is_stmt 0 view .LVU41
 167 0020 FFF7FEFF 		bl	HAL_I2C_Init
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 11


 168              	.LVL0:
 172:Core/Src/main.c ****   {
 169              		.loc 1 172 6 view .LVU42
 170 0024 00B9     		cbnz	r0, .L10
 180:Core/Src/main.c **** 
 171              		.loc 1 180 1 view .LVU43
 172 0026 08BD     		pop	{r3, pc}
 173              	.L10:
 174:Core/Src/main.c ****   }
 174              		.loc 1 174 5 is_stmt 1 view .LVU44
 175 0028 FFF7FEFF 		bl	Error_Handler
 176              	.LVL1:
 177              	.L12:
 178              		.align	2
 179              	.L11:
 180 002c 00000000 		.word	.LANCHOR0
 181 0030 00540040 		.word	1073763328
 182 0034 A0860100 		.word	100000
 183              		.cfi_endproc
 184              	.LFE67:
 186              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 187              		.align	1
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	MX_USART2_UART_Init:
 193              	.LFB68:
 188:Core/Src/main.c **** 
 194              		.loc 1 188 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 08B5     		push	{r3, lr}
 199              	.LCFI3:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 3, -8
 202              		.cfi_offset 14, -4
 197:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 203              		.loc 1 197 3 view .LVU46
 197:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 204              		.loc 1 197 19 is_stmt 0 view .LVU47
 205 0002 0A48     		ldr	r0, .L17
 206 0004 0A4B     		ldr	r3, .L17+4
 207 0006 0360     		str	r3, [r0]
 198:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 208              		.loc 1 198 3 is_stmt 1 view .LVU48
 198:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 209              		.loc 1 198 24 is_stmt 0 view .LVU49
 210 0008 4FF4E133 		mov	r3, #115200
 211 000c 4360     		str	r3, [r0, #4]
 199:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 212              		.loc 1 199 3 is_stmt 1 view .LVU50
 199:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 213              		.loc 1 199 26 is_stmt 0 view .LVU51
 214 000e 0023     		movs	r3, #0
 215 0010 8360     		str	r3, [r0, #8]
 200:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 12


 216              		.loc 1 200 3 is_stmt 1 view .LVU52
 200:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 217              		.loc 1 200 24 is_stmt 0 view .LVU53
 218 0012 C360     		str	r3, [r0, #12]
 201:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 219              		.loc 1 201 3 is_stmt 1 view .LVU54
 201:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 220              		.loc 1 201 22 is_stmt 0 view .LVU55
 221 0014 0361     		str	r3, [r0, #16]
 202:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 222              		.loc 1 202 3 is_stmt 1 view .LVU56
 202:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 223              		.loc 1 202 20 is_stmt 0 view .LVU57
 224 0016 0C22     		movs	r2, #12
 225 0018 4261     		str	r2, [r0, #20]
 203:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 226              		.loc 1 203 3 is_stmt 1 view .LVU58
 203:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 227              		.loc 1 203 25 is_stmt 0 view .LVU59
 228 001a 8361     		str	r3, [r0, #24]
 204:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 229              		.loc 1 204 3 is_stmt 1 view .LVU60
 204:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 230              		.loc 1 204 28 is_stmt 0 view .LVU61
 231 001c C361     		str	r3, [r0, #28]
 205:Core/Src/main.c ****   {
 232              		.loc 1 205 3 is_stmt 1 view .LVU62
 205:Core/Src/main.c ****   {
 233              		.loc 1 205 7 is_stmt 0 view .LVU63
 234 001e FFF7FEFF 		bl	HAL_UART_Init
 235              	.LVL2:
 205:Core/Src/main.c ****   {
 236              		.loc 1 205 6 view .LVU64
 237 0022 00B9     		cbnz	r0, .L16
 213:Core/Src/main.c **** 
 238              		.loc 1 213 1 view .LVU65
 239 0024 08BD     		pop	{r3, pc}
 240              	.L16:
 207:Core/Src/main.c ****   }
 241              		.loc 1 207 5 is_stmt 1 view .LVU66
 242 0026 FFF7FEFF 		bl	Error_Handler
 243              	.LVL3:
 244              	.L18:
 245 002a 00BF     		.align	2
 246              	.L17:
 247 002c 00000000 		.word	.LANCHOR1
 248 0030 00440040 		.word	1073759232
 249              		.cfi_endproc
 250              	.LFE68:
 252              		.section	.text.SystemClock_Config,"ax",%progbits
 253              		.align	1
 254              		.global	SystemClock_Config
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 259              	SystemClock_Config:
 260              	.LFB66:
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 13


 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 261              		.loc 1 115 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 64
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 00B5     		push	{lr}
 266              	.LCFI4:
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 14, -4
 269 0002 91B0     		sub	sp, sp, #68
 270              	.LCFI5:
 271              		.cfi_def_cfa_offset 72
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 272              		.loc 1 116 3 view .LVU68
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 273              		.loc 1 116 22 is_stmt 0 view .LVU69
 274 0004 2822     		movs	r2, #40
 275 0006 0021     		movs	r1, #0
 276 0008 06A8     		add	r0, sp, #24
 277 000a FFF7FEFF 		bl	memset
 278              	.LVL4:
 117:Core/Src/main.c **** 
 279              		.loc 1 117 3 is_stmt 1 view .LVU70
 117:Core/Src/main.c **** 
 280              		.loc 1 117 22 is_stmt 0 view .LVU71
 281 000e 0023     		movs	r3, #0
 282 0010 0193     		str	r3, [sp, #4]
 283 0012 0293     		str	r3, [sp, #8]
 284 0014 0393     		str	r3, [sp, #12]
 285 0016 0493     		str	r3, [sp, #16]
 286 0018 0593     		str	r3, [sp, #20]
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 287              		.loc 1 122 3 is_stmt 1 view .LVU72
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 288              		.loc 1 122 36 is_stmt 0 view .LVU73
 289 001a 0223     		movs	r3, #2
 290 001c 0693     		str	r3, [sp, #24]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 291              		.loc 1 123 3 is_stmt 1 view .LVU74
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 292              		.loc 1 123 30 is_stmt 0 view .LVU75
 293 001e 0122     		movs	r2, #1
 294 0020 0A92     		str	r2, [sp, #40]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 295              		.loc 1 124 3 is_stmt 1 view .LVU76
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 296              		.loc 1 124 41 is_stmt 0 view .LVU77
 297 0022 1022     		movs	r2, #16
 298 0024 0B92     		str	r2, [sp, #44]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 299              		.loc 1 125 3 is_stmt 1 view .LVU78
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 300              		.loc 1 125 34 is_stmt 0 view .LVU79
 301 0026 0D93     		str	r3, [sp, #52]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 302              		.loc 1 126 3 is_stmt 1 view .LVU80
 127:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 14


 303              		.loc 1 127 3 view .LVU81
 127:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 304              		.loc 1 127 32 is_stmt 0 view .LVU82
 305 0028 4FF46013 		mov	r3, #3670016
 306 002c 0F93     		str	r3, [sp, #60]
 128:Core/Src/main.c ****   {
 307              		.loc 1 128 3 is_stmt 1 view .LVU83
 128:Core/Src/main.c ****   {
 308              		.loc 1 128 7 is_stmt 0 view .LVU84
 309 002e 06A8     		add	r0, sp, #24
 310 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 311              	.LVL5:
 128:Core/Src/main.c ****   {
 312              		.loc 1 128 6 view .LVU85
 313 0034 78B9     		cbnz	r0, .L23
 135:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 314              		.loc 1 135 3 is_stmt 1 view .LVU86
 135:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 315              		.loc 1 135 31 is_stmt 0 view .LVU87
 316 0036 0F23     		movs	r3, #15
 317 0038 0193     		str	r3, [sp, #4]
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 318              		.loc 1 137 3 is_stmt 1 view .LVU88
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 319              		.loc 1 137 34 is_stmt 0 view .LVU89
 320 003a 0221     		movs	r1, #2
 321 003c 0291     		str	r1, [sp, #8]
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 322              		.loc 1 138 3 is_stmt 1 view .LVU90
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 323              		.loc 1 138 35 is_stmt 0 view .LVU91
 324 003e 8023     		movs	r3, #128
 325 0040 0393     		str	r3, [sp, #12]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 326              		.loc 1 139 3 is_stmt 1 view .LVU92
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 327              		.loc 1 139 36 is_stmt 0 view .LVU93
 328 0042 0023     		movs	r3, #0
 329 0044 0493     		str	r3, [sp, #16]
 140:Core/Src/main.c **** 
 330              		.loc 1 140 3 is_stmt 1 view .LVU94
 140:Core/Src/main.c **** 
 331              		.loc 1 140 36 is_stmt 0 view .LVU95
 332 0046 0593     		str	r3, [sp, #20]
 142:Core/Src/main.c ****   {
 333              		.loc 1 142 3 is_stmt 1 view .LVU96
 142:Core/Src/main.c ****   {
 334              		.loc 1 142 7 is_stmt 0 view .LVU97
 335 0048 01A8     		add	r0, sp, #4
 336 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 337              	.LVL6:
 142:Core/Src/main.c ****   {
 338              		.loc 1 142 6 view .LVU98
 339 004e 20B9     		cbnz	r0, .L24
 146:Core/Src/main.c **** 
 340              		.loc 1 146 1 view .LVU99
 341 0050 11B0     		add	sp, sp, #68
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 15


 342              	.LCFI6:
 343              		.cfi_remember_state
 344              		.cfi_def_cfa_offset 4
 345              		@ sp needed
 346 0052 5DF804FB 		ldr	pc, [sp], #4
 347              	.L23:
 348              	.LCFI7:
 349              		.cfi_restore_state
 130:Core/Src/main.c ****   }
 350              		.loc 1 130 5 is_stmt 1 view .LVU100
 351 0056 FFF7FEFF 		bl	Error_Handler
 352              	.LVL7:
 353              	.L24:
 144:Core/Src/main.c ****   }
 354              		.loc 1 144 5 view .LVU101
 355 005a FFF7FEFF 		bl	Error_Handler
 356              	.LVL8:
 357              		.cfi_endproc
 358              	.LFE66:
 360              		.section	.text.main,"ax",%progbits
 361              		.align	1
 362              		.global	main
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 367              	main:
 368              	.LFB65:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 369              		.loc 1 70 1 view -0
 370              		.cfi_startproc
 371              		@ Volatile: function does not return.
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 08B5     		push	{r3, lr}
 375              	.LCFI8:
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 3, -8
 378              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 379              		.loc 1 78 3 view .LVU103
 380 0002 FFF7FEFF 		bl	HAL_Init
 381              	.LVL9:
  85:Core/Src/main.c **** 
 382              		.loc 1 85 3 view .LVU104
 383 0006 FFF7FEFF 		bl	SystemClock_Config
 384              	.LVL10:
  92:Core/Src/main.c ****   MX_I2C1_Init();
 385              		.loc 1 92 3 view .LVU105
 386 000a FFF7FEFF 		bl	MX_GPIO_Init
 387              	.LVL11:
  93:Core/Src/main.c ****   MX_USART2_UART_Init();
 388              		.loc 1 93 3 view .LVU106
 389 000e FFF7FEFF 		bl	MX_I2C1_Init
 390              	.LVL12:
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 391              		.loc 1 94 3 view .LVU107
 392 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 16


 393              	.LVL13:
  96:Core/Src/main.c ****   /* USER CODE END 2 */
 394              		.loc 1 96 3 view .LVU108
 395 0016 024B     		ldr	r3, .L28
 396 0018 1868     		ldr	r0, [r3]
 397 001a FFF7FEFF 		bl	MS5837_Init
 398              	.LVL14:
 399              	.L26:
 101:Core/Src/main.c ****   {
 400              		.loc 1 101 3 discriminator 1 view .LVU109
 106:Core/Src/main.c ****   /* USER CODE END 3 */
 401              		.loc 1 106 3 discriminator 1 view .LVU110
 101:Core/Src/main.c ****   {
 402              		.loc 1 101 9 discriminator 1 view .LVU111
 403 001e FEE7     		b	.L26
 404              	.L29:
 405              		.align	2
 406              	.L28:
 407 0020 00000000 		.word	.LANCHOR2
 408              		.cfi_endproc
 409              	.LFE65:
 411              		.global	MS5837
 412              		.global	huart2
 413              		.global	hi2c1
 414              		.section	.bss.MS5837,"aw",%nobits
 415              		.align	2
 416              		.set	.LANCHOR2,. + 0
 419              	MS5837:
 420 0000 00000000 		.space	4
 421              		.section	.bss.hi2c1,"aw",%nobits
 422              		.align	2
 423              		.set	.LANCHOR0,. + 0
 426              	hi2c1:
 427 0000 00000000 		.space	84
 427      00000000 
 427      00000000 
 427      00000000 
 427      00000000 
 428              		.section	.bss.huart2,"aw",%nobits
 429              		.align	2
 430              		.set	.LANCHOR1,. + 0
 433              	huart2:
 434 0000 00000000 		.space	68
 434      00000000 
 434      00000000 
 434      00000000 
 434      00000000 
 435              		.text
 436              	.Letext0:
 437              		.file 3 "c:\\users\\kirby\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 438              		.file 4 "c:\\users\\kirby\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 439              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 440              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 441              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 442              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 443              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 444              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 17


 445              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 446              		.file 12 "Core/Inc/MS5837.h"
 447              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 448              		.file 14 "<built-in>"
ARM GAS  C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:18     .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:74     .text.MX_GPIO_Init:000000000000002c $d
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:79     .text.Error_Handler:0000000000000000 $t
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:85     .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:117    .text.MX_I2C1_Init:0000000000000000 $t
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:122    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:180    .text.MX_I2C1_Init:000000000000002c $d
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:187    .text.MX_USART2_UART_Init:0000000000000000 $t
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:192    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:247    .text.MX_USART2_UART_Init:000000000000002c $d
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:253    .text.SystemClock_Config:0000000000000000 $t
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:259    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:361    .text.main:0000000000000000 $t
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:367    .text.main:0000000000000000 main
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:407    .text.main:0000000000000020 $d
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:419    .bss.MS5837:0000000000000000 MS5837
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:433    .bss.huart2:0000000000000000 huart2
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:426    .bss.hi2c1:0000000000000000 hi2c1
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:415    .bss.MS5837:0000000000000000 $d
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:422    .bss.hi2c1:0000000000000000 $d
C:\Users\kirby\AppData\Local\Temp\ccvowmhR.s:429    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MS5837_Init
